// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Translation types a single message should generate types for translations with no type import from @vocab/core 1`] = `
"// This file is automatically generated by Vocab.
// To make changes update translation.json files directly.

import { createLanguage, createTranslationFile } from '@vocab/core/runtime';

const translations = createTranslationFile<'en', { Simple: () => 'Simple' }>({
  en: createLanguage({ Simple: 'Simple' }),
});

export default translations;
"
`;

exports[`Translation types all message types should generate types for translations 1`] = `
"// This file is automatically generated by Vocab.
// To make changes update translation.json files directly.

import type { FormatXMLElementFn, StringWithSuggestions } from '@vocab/core';
import { createLanguage, createTranslationFile } from '@vocab/core/runtime';

const translations = createTranslationFile<
  'en',
  {
    Simple: () => 'Simple';
    Param: (values: { candidateName: string }) => string;
    Tag: <T = string>(values: {
      Bold: FormatXMLElementFn<T>;
    }) => ReturnType<FormatXMLElementFn<T>>;
    Number: (values: { numCats: number }) => string;
    Date: (values: { start: Date | number }) => string;
    Time: (values: { expires: Date | number }) => string;
    'Nested tags': <T = string>(values: {
      Bold: FormatXMLElementFn<T>;
      Italic: FormatXMLElementFn<T>;
    }) => ReturnType<FormatXMLElementFn<T>>;
    Plural: (values: { itemCount: number }) => string;
    'Plural with nested params': (values: {
      numDogs: number;
      singularPrefix: string;
      pluralPrefix: string;
    }) => string;
    'Plural with nested tag': <T = string>(values: {
      numDogs: number;
      Bold: FormatXMLElementFn<T>;
    }) => ReturnType<FormatXMLElementFn<T>>;
    'Plural with self-referential param': (values: { foo: number }) => string;
    'Select ordinal': (values: { year: number }) => string;
    'Select ordinal with self-referential param': (values: {
      year: number;
    }) => string;
    Select: (values: { foo: StringWithSuggestions<'a' | 'b'> }) => string;
    'Select with nested params': (values: {
      foo: StringWithSuggestions<'a' | 'b'>;
      bar: string;
      baz: string;
    }) => string;
    'Select with pound element': (values: {
      foo: StringWithSuggestions<'a' | 'b'>;
    }) => string;
    'Select with nested tag': <T = string>(values: {
      foo: StringWithSuggestions<'a'>;
      Bold: FormatXMLElementFn<T>;
    }) => ReturnType<FormatXMLElementFn<T>>;
    'Select with self-referential param': (values: {
      foo: StringWithSuggestions<'a' | 'b'>;
    }) => string;
  }
>({
  en: createLanguage({
    Simple: 'Simple',
    Param: 'Welcome {candidateName}!',
    Tag: 'Foo bar <Bold>baz</Bold>',
    Number: 'I have {numCats, number} cats',
    Date: 'Sale begins {start, date, medium}',
    Time: 'Coupon expires at {expires, time, short}',
    'Nested tags': 'The quick <Bold>brown <Italic>fox</Italic></Bold>',
    Plural: '{itemCount, plural, one {# item} other {# items}}',
    'Plural with nested params':
      '{numDogs, plural, one {# {singularPrefix} dog} other {# {pluralPrefix} dogs}}',
    'Plural with nested tag':
      '{numDogs, plural, one {<Bold>#</Bold> dog} other {<Bold>#</Bold> dogs}}',
    'Plural with self-referential param':
      '{foo, plural, zero {a} one {b} other {{foo} c}}',
    'Select ordinal':
      "It's my cat's {year, selectordinal, one {#st} two {#nd} few {#rd} other {#th}} birthday!",
    'Select ordinal with self-referential param':
      "It's my cat's {year, selectordinal, one {{year}st} two {{year}nd} few {{year}rd} other {{year}th}} birthday!",
    Select: '{foo, select, a {a} b {b} other {c}}',
    'Select with nested params':
      '{foo, select, a {{bar} a} b {{baz} b} other {c}}',
    'Select with pound element': '{foo, select, a {# a} b {# b} other {c}}',
    'Select with nested tag':
      '{foo, select, a {<Bold>a</Bold>} other {<Bold>other</Bold>}}',
    'Select with self-referential param':
      '{foo, select, a {a} b {b} other {{foo} c}}',
  }),
});

export default translations;
"
`;
